{
  "oisFormat": "2.2.0",
  "title": "Kaiko",
  "version": "0.1.0",
  "apiSpecifications": {
    "components": {
      "securitySchemes": {
        "KaikoSecurityScheme1ApiKey": {
          "in": "header",
          "name": "X-Api-Key",
          "type": "apiKey"
        }
      }
    },
    "paths": {
      "/analytics.{data_ver}/implied_volatility_smile": {
        "get": {
          "parameters": [
            {
              "in": "query",
              "name": "base"
            },
            {
              "in": "query",
              "name": "expiry"
            },
            {
              "in": "path",
              "name": "data_ver"
            },
            {
              "in": "query",
              "name": "strikes"
            },
            {
              "in": "query",
              "name": "time"
            },
            {
              "in": "query",
              "name": "exchange"
            },
            {
              "in": "query",
              "name": "quote"
            },
            {
              "in": "query",
              "name": "forward_log_moneynesses"
            }
          ]
        }
      },
      "/analytics.{data_ver}/oanda_fx_rates": {
        "get": {
          "parameters": [
            {
              "in": "path",
              "name": "data_ver"
            },
            {
              "in": "query",
              "name": "sort"
            },
            {
              "in": "query",
              "name": "start_time"
            },
            {
              "in": "query",
              "name": "quote"
            },
            {
              "in": "query",
              "name": "base"
            },
            {
              "in": "query",
              "name": "page_size"
            },
            {
              "in": "query",
              "name": "continuation_token"
            },
            {
              "in": "query",
              "name": "interval"
            },
            {
              "in": "query",
              "name": "end_time"
            }
          ]
        }
      },
      "/analytics.{data_ver}/value_at_risk": {
        "get": {
          "parameters": [
            {
              "in": "query",
              "name": "quote"
            },
            {
              "in": "query",
              "name": "end_time"
            },
            {
              "in": "query",
              "name": "exchanges"
            },
            {
              "in": "query",
              "name": "bases"
            },
            {
              "in": "query",
              "name": "sources"
            },
            {
              "in": "query",
              "name": "quantities"
            },
            {
              "in": "query",
              "name": "risk_level"
            },
            {
              "in": "query",
              "name": "start_time"
            },
            {
              "in": "path",
              "name": "data_ver"
            }
          ]
        }
      },
      "/data/liquidity.{data_ver}/events": {
        "get": {
          "parameters": [
            {
              "in": "query",
              "name": "start_block"
            },
            {
              "in": "query",
              "name": "start_time"
            },
            {
              "in": "path",
              "name": "data_ver"
            },
            {
              "in": "query",
              "name": "block_number"
            },
            {
              "in": "query",
              "name": "end_time"
            },
            {
              "in": "query",
              "name": "sort"
            },
            {
              "in": "query",
              "name": "pool_contains"
            },
            {
              "in": "query",
              "name": "protocol"
            },
            {
              "in": "query",
              "name": "pool_address"
            },
            {
              "in": "query",
              "name": "user_addresses"
            },
            {
              "in": "query",
              "name": "page_size"
            },
            {
              "in": "query",
              "name": "type"
            },
            {
              "in": "query",
              "name": "tx_hash"
            },
            {
              "in": "query",
              "name": "end_block"
            }
          ]
        }
      },
      "/data/liquidity.{data_ver}/snapshots": {
        "get": {
          "parameters": [
            {
              "in": "query",
              "name": "sort"
            },
            {
              "in": "query",
              "name": "start_time"
            },
            {
              "in": "query",
              "name": "start_block"
            },
            {
              "in": "query",
              "name": "end_block"
            },
            {
              "in": "query",
              "name": "pool_address"
            },
            {
              "in": "path",
              "name": "data_ver"
            },
            {
              "in": "query",
              "name": "page_size"
            },
            {
              "in": "query",
              "name": "end_time"
            }
          ]
        }
      },
      "/data/liquidity.{data_ver}/snapshots/usp3": {
        "get": {
          "parameters": [
            {
              "in": "query",
              "name": "start_block"
            },
            {
              "in": "query",
              "name": "start_time"
            },
            {
              "in": "path",
              "name": "data_ver"
            },
            {
              "in": "query",
              "name": "page_size"
            },
            {
              "in": "query",
              "name": "end_block"
            },
            {
              "in": "query",
              "name": "pool_address"
            },
            {
              "in": "query",
              "name": "end_time"
            },
            {
              "in": "query",
              "name": "price_range"
            }
          ]
        }
      },
      "/derivatives.{data_ver}/price": {
        "get": {
          "parameters": [
            {
              "in": "query",
              "name": "instrument"
            },
            {
              "in": "query",
              "name": "page_size"
            },
            {
              "in": "query",
              "name": "instrument_class"
            },
            {
              "in": "query",
              "name": "interval"
            },
            {
              "in": "query",
              "name": "sort"
            },
            {
              "in": "query",
              "name": "start_time"
            },
            {
              "in": "query",
              "name": "end_time"
            },
            {
              "in": "path",
              "name": "data_ver"
            },
            {
              "in": "query",
              "name": "exchange"
            }
          ]
        }
      },
      "/derivatives.{data_ver}/reference": {
        "get": {
          "parameters": [
            {
              "in": "query",
              "name": "base_assets"
            },
            {
              "in": "query",
              "name": "page_size"
            },
            {
              "in": "query",
              "name": "start_time"
            },
            {
              "in": "query",
              "name": "quote_assets"
            },
            {
              "in": "query",
              "name": "option_type"
            },
            {
              "in": "query",
              "name": "instrument_class"
            },
            {
              "in": "path",
              "name": "data_ver"
            },
            {
              "in": "query",
              "name": "end_time"
            },
            {
              "in": "query",
              "name": "exchange"
            },
            {
              "in": "query",
              "name": "instrument"
            }
          ]
        }
      },
      "/derivatives.{data_ver}/risk": {
        "get": {
          "parameters": [
            {
              "in": "query",
              "name": "interval"
            },
            {
              "in": "query",
              "name": "sort"
            },
            {
              "in": "query",
              "name": "end_time"
            },
            {
              "in": "query",
              "name": "start_time"
            },
            {
              "in": "query",
              "name": "page_size"
            },
            {
              "in": "path",
              "name": "data_ver"
            },
            {
              "in": "query",
              "name": "exchange"
            },
            {
              "in": "query",
              "name": "instrument_class"
            },
            {
              "in": "query",
              "name": "instrument"
            }
          ]
        }
      },
      "/lending.{data_ver}/events": {
        "get": {
          "parameters": [
            {
              "in": "query",
              "name": "user_address"
            },
            {
              "in": "query",
              "name": "start_time"
            },
            {
              "in": "query",
              "name": "page_size"
            },
            {
              "in": "query",
              "name": "end_block"
            },
            {
              "in": "query",
              "name": "start_block"
            },
            {
              "in": "query",
              "name": "block_number"
            },
            {
              "in": "query",
              "name": "asset"
            },
            {
              "in": "query",
              "name": "tx_hash"
            },
            {
              "in": "query",
              "name": "protocol"
            },
            {
              "in": "query",
              "name": "blockchain"
            },
            {
              "in": "query",
              "name": "sort"
            },
            {
              "in": "query",
              "name": "type"
            },
            {
              "in": "path",
              "name": "data_ver"
            },
            {
              "in": "query",
              "name": "end_time"
            }
          ]
        }
      },
      "/trades.{data_ver}/spot_direct_exchange_rate/{base_asset}/{quote_asset}": {
        "get": {
          "parameters": [
            {
              "in": "query",
              "name": "end_time"
            },
            {
              "in": "path",
              "name": "data_ver"
            },
            {
              "in": "query",
              "name": "page_size"
            },
            {
              "in": "query",
              "name": "include_exchanges"
            },
            {
              "in": "query",
              "name": "interval"
            },
            {
              "in": "query",
              "name": "exclude_exchanges"
            },
            {
              "in": "path",
              "name": "base_asset"
            },
            {
              "in": "path",
              "name": "quote_asset"
            },
            {
              "in": "query",
              "name": "sources"
            },
            {
              "in": "query",
              "name": "sort"
            },
            {
              "in": "query",
              "name": "start_time"
            }
          ]
        }
      },
      "/trades.{data_ver}/spot_exchange_rate/{base_asset}/{quote_asset}": {
        "get": {
          "parameters": [
            {
              "in": "path",
              "name": "quote_asset"
            },
            {
              "in": "query",
              "name": "outliers_min_data"
            },
            {
              "in": "query",
              "name": "start_time"
            },
            {
              "in": "query",
              "name": "sort"
            },
            {
              "in": "query",
              "name": "end_time"
            },
            {
              "in": "query",
              "name": "outliers_threshold"
            },
            {
              "in": "path",
              "name": "base_asset"
            },
            {
              "in": "path",
              "name": "data_ver"
            },
            {
              "in": "query",
              "name": "include_exchanges"
            },
            {
              "in": "query",
              "name": "page_size"
            },
            {
              "in": "query",
              "name": "sources"
            },
            {
              "in": "query",
              "name": "outliers_strategy"
            },
            {
              "in": "query",
              "name": "interval"
            },
            {
              "in": "query",
              "name": "extrapolate_missing_values"
            },
            {
              "in": "query",
              "name": "exclude_exchanges"
            }
          ]
        }
      },
      "/trades.{data_ver}/valuation": {
        "get": {
          "parameters": [
            {
              "in": "query",
              "name": "interval"
            },
            {
              "in": "query",
              "name": "continuation_token"
            },
            {
              "in": "path",
              "name": "data_ver"
            },
            {
              "in": "query",
              "name": "bases"
            },
            {
              "in": "query",
              "name": "semi_length_window"
            },
            {
              "in": "query",
              "name": "sources"
            },
            {
              "in": "query",
              "name": "quote"
            },
            {
              "in": "query",
              "name": "weights"
            },
            {
              "in": "query",
              "name": "exchanges"
            },
            {
              "in": "query",
              "name": "end_time"
            },
            {
              "in": "query",
              "name": "percentages"
            },
            {
              "in": "query",
              "name": "start_time"
            }
          ]
        }
      },
      "/{comm}.{data_ver}/exchanges/{exchange}/{instrument_c}/{instrument}/aggregations/count_ohlcv_vwap": {
        "get": {
          "parameters": [
            {
              "in": "query",
              "name": "page_size"
            },
            {
              "in": "query",
              "name": "sort"
            },
            {
              "in": "path",
              "name": "data_ver"
            },
            {
              "in": "path",
              "name": "comm"
            },
            {
              "in": "query",
              "name": "start_time"
            },
            {
              "in": "path",
              "name": "exchange"
            },
            {
              "in": "path",
              "name": "instrument_c"
            },
            {
              "in": "path",
              "name": "instrument"
            },
            {
              "in": "query",
              "name": "continuation_token"
            },
            {
              "in": "query",
              "name": "end_time"
            },
            {
              "in": "query",
              "name": "interval"
            }
          ]
        }
      },
      "/{comm}.{data_ver}/exchanges/{exchange}/{instrument_c}/{instrument}/aggregations/ohlcv": {
        "get": {
          "parameters": [
            {
              "in": "path",
              "name": "comm"
            },
            {
              "in": "query",
              "name": "continuation_token"
            },
            {
              "in": "query",
              "name": "end_time"
            },
            {
              "in": "path",
              "name": "data_ver"
            },
            {
              "in": "query",
              "name": "interval"
            },
            {
              "in": "query",
              "name": "page_size"
            },
            {
              "in": "query",
              "name": "start_time"
            },
            {
              "in": "query",
              "name": "sort"
            },
            {
              "in": "path",
              "name": "instrument_c"
            },
            {
              "in": "path",
              "name": "exchange"
            },
            {
              "in": "path",
              "name": "instrument"
            }
          ]
        }
      },
      "/{comm}.{data_ver}/exchanges/{exchange}/{instrument_c}/{instrument}/aggregations/vwap": {
        "get": {
          "parameters": [
            {
              "in": "path",
              "name": "data_ver"
            },
            {
              "in": "query",
              "name": "start_time"
            },
            {
              "in": "query",
              "name": "page_size"
            },
            {
              "in": "query",
              "name": "continuation_token"
            },
            {
              "in": "path",
              "name": "comm"
            },
            {
              "in": "path",
              "name": "exchange"
            },
            {
              "in": "path",
              "name": "instrument"
            },
            {
              "in": "path",
              "name": "instrument_c"
            },
            {
              "in": "query",
              "name": "end_time"
            },
            {
              "in": "query",
              "name": "interval"
            },
            {
              "in": "query",
              "name": "sort"
            }
          ]
        }
      },
      "/{comm}.{data_ver}/exchanges/{exchange}/{instrument_c}/{instrument}/ob_aggregations/depth": {
        "get": {
          "parameters": [
            {
              "in": "path",
              "name": "instrument"
            },
            {
              "in": "path",
              "name": "comm"
            },
            {
              "in": "query",
              "name": "start_time"
            },
            {
              "in": "path",
              "name": "instrument_c"
            },
            {
              "in": "query",
              "name": "sort"
            },
            {
              "in": "query",
              "name": "page_size"
            },
            {
              "in": "query",
              "name": "interval"
            },
            {
              "in": "query",
              "name": "end_time"
            },
            {
              "in": "query",
              "name": "continuation_token"
            },
            {
              "in": "path",
              "name": "exchange"
            },
            {
              "in": "path",
              "name": "data_ver"
            }
          ]
        }
      },
      "/{comm}.{data_ver}/exchanges/{exchange}/{instrument_c}/{instrument}/ob_aggregations/full": {
        "get": {
          "parameters": [
            {
              "in": "query",
              "name": "page_size"
            },
            {
              "in": "query",
              "name": "interval"
            },
            {
              "in": "path",
              "name": "exchange"
            },
            {
              "in": "query",
              "name": "continuation_token"
            },
            {
              "in": "query",
              "name": "end_time"
            },
            {
              "in": "path",
              "name": "instrument"
            },
            {
              "in": "path",
              "name": "instrument_c"
            },
            {
              "in": "query",
              "name": "start_time"
            },
            {
              "in": "path",
              "name": "comm"
            },
            {
              "in": "query",
              "name": "slippage_ref"
            },
            {
              "in": "query",
              "name": "sort"
            },
            {
              "in": "query",
              "name": "slippage"
            },
            {
              "in": "path",
              "name": "data_ver"
            }
          ]
        }
      },
      "/{comm}.{data_ver}/exchanges/{exchange}/{instrument_c}/{instrument}/ob_aggregations/slippage": {
        "get": {
          "parameters": [
            {
              "in": "query",
              "name": "interval"
            },
            {
              "in": "path",
              "name": "instrument"
            },
            {
              "in": "query",
              "name": "sort"
            },
            {
              "in": "path",
              "name": "data_ver"
            },
            {
              "in": "query",
              "name": "start_time"
            },
            {
              "in": "query",
              "name": "slippage"
            },
            {
              "in": "query",
              "name": "page_size"
            },
            {
              "in": "query",
              "name": "slippage_ref"
            },
            {
              "in": "path",
              "name": "comm"
            },
            {
              "in": "path",
              "name": "instrument_c"
            },
            {
              "in": "path",
              "name": "exchange"
            },
            {
              "in": "query",
              "name": "continuation_token"
            },
            {
              "in": "query",
              "name": "end_time"
            }
          ]
        }
      },
      "/{comm}.{data_ver}/exchanges/{exchange}/{instrument_c}/{instrument}/snapshots/depth": {
        "get": {
          "parameters": [
            {
              "in": "query",
              "name": "sort"
            },
            {
              "in": "query",
              "name": "end_time"
            },
            {
              "in": "query",
              "name": "page_size"
            },
            {
              "in": "query",
              "name": "start_time"
            },
            {
              "in": "path",
              "name": "data_ver"
            },
            {
              "in": "path",
              "name": "comm"
            },
            {
              "in": "path",
              "name": "exchange"
            },
            {
              "in": "path",
              "name": "instrument"
            },
            {
              "in": "path",
              "name": "instrument_c"
            },
            {
              "in": "query",
              "name": "continuation_token"
            }
          ]
        }
      },
      "/{comm}.{data_ver}/exchanges/{exchange}/{instrument_c}/{instrument}/snapshots/full": {
        "get": {
          "parameters": [
            {
              "in": "query",
              "name": "slippage_ref"
            },
            {
              "in": "query",
              "name": "sort"
            },
            {
              "in": "path",
              "name": "data_ver"
            },
            {
              "in": "query",
              "name": "start_time"
            },
            {
              "in": "query",
              "name": "slippage"
            },
            {
              "in": "path",
              "name": "instrument_c"
            },
            {
              "in": "query",
              "name": "continuation_token"
            },
            {
              "in": "path",
              "name": "instrument"
            },
            {
              "in": "path",
              "name": "exchange"
            },
            {
              "in": "query",
              "name": "end_time"
            },
            {
              "in": "query",
              "name": "limit_orders"
            },
            {
              "in": "query",
              "name": "page_size"
            },
            {
              "in": "path",
              "name": "comm"
            },
            {
              "in": "query",
              "name": "orders"
            }
          ]
        }
      },
      "/{comm}.{data_ver}/exchanges/{exchange}/{instrument_c}/{instrument}/snapshots/raw": {
        "get": {
          "parameters": [
            {
              "in": "path",
              "name": "exchange"
            },
            {
              "in": "query",
              "name": "limit_orders"
            },
            {
              "in": "query",
              "name": "continuation_token"
            },
            {
              "in": "query",
              "name": "page_size"
            },
            {
              "in": "query",
              "name": "end_time"
            },
            {
              "in": "query",
              "name": "start_time"
            },
            {
              "in": "path",
              "name": "instrument"
            },
            {
              "in": "path",
              "name": "instrument_c"
            },
            {
              "in": "path",
              "name": "data_ver"
            },
            {
              "in": "query",
              "name": "sort"
            },
            {
              "in": "path",
              "name": "comm"
            }
          ]
        }
      },
      "/{comm}.{data_ver}/exchanges/{exchange}/{instrument_c}/{instrument}/snapshots/slippage": {
        "get": {
          "parameters": [
            {
              "in": "query",
              "name": "slippage_ref"
            },
            {
              "in": "query",
              "name": "start_time"
            },
            {
              "in": "path",
              "name": "data_ver"
            },
            {
              "in": "path",
              "name": "instrument_c"
            },
            {
              "in": "query",
              "name": "page_size"
            },
            {
              "in": "path",
              "name": "instrument"
            },
            {
              "in": "query",
              "name": "continuation_token"
            },
            {
              "in": "query",
              "name": "end_time"
            },
            {
              "in": "path",
              "name": "exchange"
            },
            {
              "in": "query",
              "name": "sort"
            },
            {
              "in": "path",
              "name": "comm"
            },
            {
              "in": "query",
              "name": "slippage"
            }
          ]
        }
      },
      "/{comm}.{data_ver}/exchanges/{exchange}/{instrument_c}/{instrument}/trades": {
        "get": {
          "parameters": [
            {
              "in": "path",
              "name": "instrument"
            },
            {
              "in": "query",
              "name": "end_time"
            },
            {
              "in": "path",
              "name": "comm"
            },
            {
              "in": "query",
              "name": "start_time"
            },
            {
              "in": "query",
              "name": "page_size"
            },
            {
              "in": "path",
              "name": "data_ver"
            },
            {
              "in": "path",
              "name": "exchange"
            },
            {
              "in": "path",
              "name": "instrument_c"
            },
            {
              "in": "query",
              "name": "continuation_token"
            }
          ]
        }
      },
      "/{path}": {
        "get": {
          "parameters": [
            {
              "in": "path",
              "name": "path"
            },
            {
              "in": "query",
              "name": "outliers_min_data"
            },
            {
              "in": "query",
              "name": "start_time"
            },
            {
              "in": "query",
              "name": "sort"
            },
            {
              "in": "query",
              "name": "end_time"
            },
            {
              "in": "query",
              "name": "outliers_threshold"
            },
            {
              "in": "query",
              "name": "include_exchanges"
            },
            {
              "in": "query",
              "name": "page_size"
            },
            {
              "in": "query",
              "name": "sources"
            },
            {
              "in": "query",
              "name": "outliers_strategy"
            },
            {
              "in": "query",
              "name": "interval"
            },
            {
              "in": "query",
              "name": "extrapolate_missing_values"
            },
            {
              "in": "query",
              "name": "exclude_exchanges"
            }
          ]
        }
      }
    },
    "servers": [
      {
        "url": "https://us.market-api.kaiko.io/v2/data"
      }
    ],
    "security": {
      "KaikoSecurityScheme1ApiKey": []
    }
  },
  "endpoints": [
    {
      "fixedOperationParameters": [],
      "name": "GET_/{comm}.{data_ver}/exchanges/{exchange}/{instrument_c}/{instrument}/trades",
      "operation": {
        "method": "get",
        "path": "/{comm}.{data_ver}/exchanges/{exchange}/{instrument_c}/{instrument}/trades"
      },
      "parameters": [
        {
          "name": "instrument",
          "operationParameter": {
            "in": "path",
            "name": "instrument"
          },
          "required": false
        },
        {
          "name": "end_time",
          "operationParameter": {
            "in": "query",
            "name": "end_time"
          },
          "required": false
        },
        {
          "name": "comm",
          "operationParameter": {
            "in": "path",
            "name": "comm"
          },
          "required": false
        },
        {
          "name": "start_time",
          "operationParameter": {
            "in": "query",
            "name": "start_time"
          },
          "required": false
        },
        {
          "name": "page_size",
          "operationParameter": {
            "in": "query",
            "name": "page_size"
          },
          "required": false
        },
        {
          "name": "data_ver",
          "operationParameter": {
            "in": "path",
            "name": "data_ver"
          },
          "required": false
        },
        {
          "name": "exchange",
          "operationParameter": {
            "in": "path",
            "name": "exchange"
          },
          "required": false
        },
        {
          "name": "instrument_c",
          "operationParameter": {
            "in": "path",
            "name": "instrument_c"
          },
          "required": false
        },
        {
          "name": "continuation_token",
          "operationParameter": {
            "in": "query",
            "name": "continuation_token"
          },
          "required": false
        }
      ],
      "reservedParameters": [
        {
          "name": "_type"
        },
        {
          "name": "_times"
        },
        {
          "name": "_path"
        }
      ],
      "preProcessingSpecifications": [],
      "postProcessingSpecifications": []
    },
    {
      "fixedOperationParameters": [],
      "name": "GET_/{comm}.{data_ver}/exchanges/{exchange}/{instrument_c}/{instrument}/snapshots/full",
      "operation": {
        "method": "get",
        "path": "/{comm}.{data_ver}/exchanges/{exchange}/{instrument_c}/{instrument}/snapshots/full"
      },
      "parameters": [
        {
          "name": "slippage_ref",
          "operationParameter": {
            "in": "query",
            "name": "slippage_ref"
          },
          "required": false
        },
        {
          "name": "sort",
          "operationParameter": {
            "in": "query",
            "name": "sort"
          },
          "required": false
        },
        {
          "name": "data_ver",
          "operationParameter": {
            "in": "path",
            "name": "data_ver"
          },
          "required": false
        },
        {
          "name": "start_time",
          "operationParameter": {
            "in": "query",
            "name": "start_time"
          },
          "required": false
        },
        {
          "name": "slippage",
          "operationParameter": {
            "in": "query",
            "name": "slippage"
          },
          "required": false
        },
        {
          "name": "instrument_c",
          "operationParameter": {
            "in": "path",
            "name": "instrument_c"
          },
          "required": false
        },
        {
          "name": "continuation_token",
          "operationParameter": {
            "in": "query",
            "name": "continuation_token"
          },
          "required": false
        },
        {
          "name": "instrument",
          "operationParameter": {
            "in": "path",
            "name": "instrument"
          },
          "required": false
        },
        {
          "name": "exchange",
          "operationParameter": {
            "in": "path",
            "name": "exchange"
          },
          "required": false
        },
        {
          "name": "end_time",
          "operationParameter": {
            "in": "query",
            "name": "end_time"
          },
          "required": false
        },
        {
          "name": "limit_orders",
          "operationParameter": {
            "in": "query",
            "name": "limit_orders"
          },
          "required": false
        },
        {
          "name": "page_size",
          "operationParameter": {
            "in": "query",
            "name": "page_size"
          },
          "required": false
        },
        {
          "name": "comm",
          "operationParameter": {
            "in": "path",
            "name": "comm"
          },
          "required": false
        },
        {
          "name": "orders",
          "operationParameter": {
            "in": "query",
            "name": "orders"
          },
          "required": false
        }
      ],
      "reservedParameters": [
        {
          "name": "_times"
        },
        {
          "name": "_type"
        },
        {
          "name": "_path"
        }
      ],
      "preProcessingSpecifications": [],
      "postProcessingSpecifications": []
    },
    {
      "fixedOperationParameters": [],
      "name": "GET_/{comm}.{data_ver}/exchanges/{exchange}/{instrument_c}/{instrument}/snapshots/raw",
      "operation": {
        "method": "get",
        "path": "/{comm}.{data_ver}/exchanges/{exchange}/{instrument_c}/{instrument}/snapshots/raw"
      },
      "parameters": [
        {
          "name": "exchange",
          "operationParameter": {
            "in": "path",
            "name": "exchange"
          },
          "required": false
        },
        {
          "name": "limit_orders",
          "operationParameter": {
            "in": "query",
            "name": "limit_orders"
          },
          "required": false
        },
        {
          "name": "continuation_token",
          "operationParameter": {
            "in": "query",
            "name": "continuation_token"
          },
          "required": false
        },
        {
          "name": "page_size",
          "operationParameter": {
            "in": "query",
            "name": "page_size"
          },
          "required": false
        },
        {
          "name": "end_time",
          "operationParameter": {
            "in": "query",
            "name": "end_time"
          },
          "required": false
        },
        {
          "name": "start_time",
          "operationParameter": {
            "in": "query",
            "name": "start_time"
          },
          "required": false
        },
        {
          "name": "instrument",
          "operationParameter": {
            "in": "path",
            "name": "instrument"
          },
          "required": false
        },
        {
          "name": "instrument_c",
          "operationParameter": {
            "in": "path",
            "name": "instrument_c"
          },
          "required": false
        },
        {
          "name": "data_ver",
          "operationParameter": {
            "in": "path",
            "name": "data_ver"
          },
          "required": false
        },
        {
          "name": "sort",
          "operationParameter": {
            "in": "query",
            "name": "sort"
          },
          "required": false
        },
        {
          "name": "comm",
          "operationParameter": {
            "in": "path",
            "name": "comm"
          },
          "required": false
        }
      ],
      "reservedParameters": [
        {
          "name": "_path"
        },
        {
          "name": "_times"
        },
        {
          "name": "_type"
        }
      ],
      "preProcessingSpecifications": [],
      "postProcessingSpecifications": []
    },
    {
      "fixedOperationParameters": [],
      "name": "GET_/{comm}.{data_ver}/exchanges/{exchange}/{instrument_c}/{instrument}/snapshots/depth",
      "operation": {
        "method": "get",
        "path": "/{comm}.{data_ver}/exchanges/{exchange}/{instrument_c}/{instrument}/snapshots/depth"
      },
      "parameters": [
        {
          "name": "sort",
          "operationParameter": {
            "in": "query",
            "name": "sort"
          },
          "required": false
        },
        {
          "name": "end_time",
          "operationParameter": {
            "in": "query",
            "name": "end_time"
          },
          "required": false
        },
        {
          "name": "page_size",
          "operationParameter": {
            "in": "query",
            "name": "page_size"
          },
          "required": false
        },
        {
          "name": "start_time",
          "operationParameter": {
            "in": "query",
            "name": "start_time"
          },
          "required": false
        },
        {
          "name": "data_ver",
          "operationParameter": {
            "in": "path",
            "name": "data_ver"
          },
          "required": false
        },
        {
          "name": "comm",
          "operationParameter": {
            "in": "path",
            "name": "comm"
          },
          "required": false
        },
        {
          "name": "exchange",
          "operationParameter": {
            "in": "path",
            "name": "exchange"
          },
          "required": false
        },
        {
          "name": "instrument",
          "operationParameter": {
            "in": "path",
            "name": "instrument"
          },
          "required": false
        },
        {
          "name": "instrument_c",
          "operationParameter": {
            "in": "path",
            "name": "instrument_c"
          },
          "required": false
        },
        {
          "name": "continuation_token",
          "operationParameter": {
            "in": "query",
            "name": "continuation_token"
          },
          "required": false
        }
      ],
      "reservedParameters": [
        {
          "name": "_times"
        },
        {
          "name": "_type"
        },
        {
          "name": "_path"
        }
      ],
      "preProcessingSpecifications": [],
      "postProcessingSpecifications": []
    },
    {
      "fixedOperationParameters": [],
      "name": "GET_/{comm}.{data_ver}/exchanges/{exchange}/{instrument_c}/{instrument}/snapshots/slippage",
      "operation": {
        "method": "get",
        "path": "/{comm}.{data_ver}/exchanges/{exchange}/{instrument_c}/{instrument}/snapshots/slippage"
      },
      "parameters": [
        {
          "name": "slippage_ref",
          "operationParameter": {
            "in": "query",
            "name": "slippage_ref"
          },
          "required": false
        },
        {
          "name": "start_time",
          "operationParameter": {
            "in": "query",
            "name": "start_time"
          },
          "required": false
        },
        {
          "name": "data_ver",
          "operationParameter": {
            "in": "path",
            "name": "data_ver"
          },
          "required": false
        },
        {
          "name": "instrument_c",
          "operationParameter": {
            "in": "path",
            "name": "instrument_c"
          },
          "required": false
        },
        {
          "name": "page_size",
          "operationParameter": {
            "in": "query",
            "name": "page_size"
          },
          "required": false
        },
        {
          "name": "instrument",
          "operationParameter": {
            "in": "path",
            "name": "instrument"
          },
          "required": false
        },
        {
          "name": "continuation_token",
          "operationParameter": {
            "in": "query",
            "name": "continuation_token"
          },
          "required": false
        },
        {
          "name": "end_time",
          "operationParameter": {
            "in": "query",
            "name": "end_time"
          },
          "required": false
        },
        {
          "name": "exchange",
          "operationParameter": {
            "in": "path",
            "name": "exchange"
          },
          "required": false
        },
        {
          "name": "sort",
          "operationParameter": {
            "in": "query",
            "name": "sort"
          },
          "required": false
        },
        {
          "name": "comm",
          "operationParameter": {
            "in": "path",
            "name": "comm"
          },
          "required": false
        },
        {
          "name": "slippage",
          "operationParameter": {
            "in": "query",
            "name": "slippage"
          },
          "required": false
        }
      ],
      "reservedParameters": [
        {
          "name": "_type"
        },
        {
          "name": "_times"
        },
        {
          "name": "_path"
        }
      ],
      "preProcessingSpecifications": [],
      "postProcessingSpecifications": []
    },
    {
      "fixedOperationParameters": [],
      "name": "GET_/{comm}.{data_ver}/exchanges/{exchange}/{instrument_c}/{instrument}/ob_aggregations/full",
      "operation": {
        "method": "get",
        "path": "/{comm}.{data_ver}/exchanges/{exchange}/{instrument_c}/{instrument}/ob_aggregations/full"
      },
      "parameters": [
        {
          "name": "page_size",
          "operationParameter": {
            "in": "query",
            "name": "page_size"
          },
          "required": false
        },
        {
          "name": "interval",
          "operationParameter": {
            "in": "query",
            "name": "interval"
          },
          "required": false
        },
        {
          "name": "exchange",
          "operationParameter": {
            "in": "path",
            "name": "exchange"
          },
          "required": false
        },
        {
          "name": "continuation_token",
          "operationParameter": {
            "in": "query",
            "name": "continuation_token"
          },
          "required": false
        },
        {
          "name": "end_time",
          "operationParameter": {
            "in": "query",
            "name": "end_time"
          },
          "required": false
        },
        {
          "name": "instrument",
          "operationParameter": {
            "in": "path",
            "name": "instrument"
          },
          "required": false
        },
        {
          "name": "instrument_c",
          "operationParameter": {
            "in": "path",
            "name": "instrument_c"
          },
          "required": false
        },
        {
          "name": "start_time",
          "operationParameter": {
            "in": "query",
            "name": "start_time"
          },
          "required": false
        },
        {
          "name": "comm",
          "operationParameter": {
            "in": "path",
            "name": "comm"
          },
          "required": false
        },
        {
          "name": "slippage_ref",
          "operationParameter": {
            "in": "query",
            "name": "slippage_ref"
          },
          "required": false
        },
        {
          "name": "sort",
          "operationParameter": {
            "in": "query",
            "name": "sort"
          },
          "required": false
        },
        {
          "name": "slippage",
          "operationParameter": {
            "in": "query",
            "name": "slippage"
          },
          "required": false
        },
        {
          "name": "data_ver",
          "operationParameter": {
            "in": "path",
            "name": "data_ver"
          },
          "required": false
        }
      ],
      "reservedParameters": [
        {
          "name": "_path"
        },
        {
          "name": "_type"
        },
        {
          "name": "_times"
        }
      ],
      "preProcessingSpecifications": [],
      "postProcessingSpecifications": []
    },
    {
      "fixedOperationParameters": [],
      "name": "GET_/{comm}.{data_ver}/exchanges/{exchange}/{instrument_c}/{instrument}/ob_aggregations/depth",
      "operation": {
        "method": "get",
        "path": "/{comm}.{data_ver}/exchanges/{exchange}/{instrument_c}/{instrument}/ob_aggregations/depth"
      },
      "parameters": [
        {
          "name": "instrument",
          "operationParameter": {
            "in": "path",
            "name": "instrument"
          },
          "required": false
        },
        {
          "name": "comm",
          "operationParameter": {
            "in": "path",
            "name": "comm"
          },
          "required": false
        },
        {
          "name": "start_time",
          "operationParameter": {
            "in": "query",
            "name": "start_time"
          },
          "required": false
        },
        {
          "name": "instrument_c",
          "operationParameter": {
            "in": "path",
            "name": "instrument_c"
          },
          "required": false
        },
        {
          "name": "sort",
          "operationParameter": {
            "in": "query",
            "name": "sort"
          },
          "required": false
        },
        {
          "name": "page_size",
          "operationParameter": {
            "in": "query",
            "name": "page_size"
          },
          "required": false
        },
        {
          "name": "interval",
          "operationParameter": {
            "in": "query",
            "name": "interval"
          },
          "required": false
        },
        {
          "name": "end_time",
          "operationParameter": {
            "in": "query",
            "name": "end_time"
          },
          "required": false
        },
        {
          "name": "continuation_token",
          "operationParameter": {
            "in": "query",
            "name": "continuation_token"
          },
          "required": false
        },
        {
          "name": "exchange",
          "operationParameter": {
            "in": "path",
            "name": "exchange"
          },
          "required": false
        },
        {
          "name": "data_ver",
          "operationParameter": {
            "in": "path",
            "name": "data_ver"
          },
          "required": false
        }
      ],
      "reservedParameters": [
        {
          "name": "_times"
        },
        {
          "name": "_path"
        },
        {
          "name": "_type"
        }
      ],
      "preProcessingSpecifications": [],
      "postProcessingSpecifications": []
    },
    {
      "fixedOperationParameters": [],
      "name": "GET_/{comm}.{data_ver}/exchanges/{exchange}/{instrument_c}/{instrument}/ob_aggregations/slippage",
      "operation": {
        "method": "get",
        "path": "/{comm}.{data_ver}/exchanges/{exchange}/{instrument_c}/{instrument}/ob_aggregations/slippage"
      },
      "parameters": [
        {
          "name": "interval",
          "operationParameter": {
            "in": "query",
            "name": "interval"
          },
          "required": false
        },
        {
          "name": "instrument",
          "operationParameter": {
            "in": "path",
            "name": "instrument"
          },
          "required": false
        },
        {
          "name": "sort",
          "operationParameter": {
            "in": "query",
            "name": "sort"
          },
          "required": false
        },
        {
          "name": "data_ver",
          "operationParameter": {
            "in": "path",
            "name": "data_ver"
          },
          "required": false
        },
        {
          "name": "start_time",
          "operationParameter": {
            "in": "query",
            "name": "start_time"
          },
          "required": false
        },
        {
          "name": "slippage",
          "operationParameter": {
            "in": "query",
            "name": "slippage"
          },
          "required": false
        },
        {
          "name": "page_size",
          "operationParameter": {
            "in": "query",
            "name": "page_size"
          },
          "required": false
        },
        {
          "name": "slippage_ref",
          "operationParameter": {
            "in": "query",
            "name": "slippage_ref"
          },
          "required": false
        },
        {
          "name": "comm",
          "operationParameter": {
            "in": "path",
            "name": "comm"
          },
          "required": false
        },
        {
          "name": "instrument_c",
          "operationParameter": {
            "in": "path",
            "name": "instrument_c"
          },
          "required": false
        },
        {
          "name": "exchange",
          "operationParameter": {
            "in": "path",
            "name": "exchange"
          },
          "required": false
        },
        {
          "name": "continuation_token",
          "operationParameter": {
            "in": "query",
            "name": "continuation_token"
          },
          "required": false
        },
        {
          "name": "end_time",
          "operationParameter": {
            "in": "query",
            "name": "end_time"
          },
          "required": false
        }
      ],
      "reservedParameters": [
        {
          "name": "_type"
        },
        {
          "name": "_path"
        },
        {
          "name": "_times"
        }
      ],
      "preProcessingSpecifications": [],
      "postProcessingSpecifications": []
    },
    {
      "fixedOperationParameters": [],
      "name": "GET_/{comm}.{data_ver}/exchanges/{exchange}/{instrument_c}/{instrument}/aggregations/ohlcv",
      "operation": {
        "method": "get",
        "path": "/{comm}.{data_ver}/exchanges/{exchange}/{instrument_c}/{instrument}/aggregations/ohlcv"
      },
      "parameters": [
        {
          "name": "comm",
          "operationParameter": {
            "in": "path",
            "name": "comm"
          },
          "required": false
        },
        {
          "name": "continuation_token",
          "operationParameter": {
            "in": "query",
            "name": "continuation_token"
          },
          "required": false
        },
        {
          "name": "end_time",
          "operationParameter": {
            "in": "query",
            "name": "end_time"
          },
          "required": false
        },
        {
          "name": "data_ver",
          "operationParameter": {
            "in": "path",
            "name": "data_ver"
          },
          "required": false
        },
        {
          "name": "interval",
          "operationParameter": {
            "in": "query",
            "name": "interval"
          },
          "required": false
        },
        {
          "name": "page_size",
          "operationParameter": {
            "in": "query",
            "name": "page_size"
          },
          "required": false
        },
        {
          "name": "start_time",
          "operationParameter": {
            "in": "query",
            "name": "start_time"
          },
          "required": false
        },
        {
          "name": "sort",
          "operationParameter": {
            "in": "query",
            "name": "sort"
          },
          "required": false
        },
        {
          "name": "instrument_c",
          "operationParameter": {
            "in": "path",
            "name": "instrument_c"
          },
          "required": false
        },
        {
          "name": "exchange",
          "operationParameter": {
            "in": "path",
            "name": "exchange"
          },
          "required": false
        },
        {
          "name": "instrument",
          "operationParameter": {
            "in": "path",
            "name": "instrument"
          },
          "required": false
        }
      ],
      "reservedParameters": [
        {
          "name": "_times"
        },
        {
          "name": "_path"
        },
        {
          "name": "_type"
        }
      ],
      "preProcessingSpecifications": [],
      "postProcessingSpecifications": []
    },
    {
      "fixedOperationParameters": [],
      "name": "GET_/{comm}.{data_ver}/exchanges/{exchange}/{instrument_c}/{instrument}/aggregations/vwap",
      "operation": {
        "method": "get",
        "path": "/{comm}.{data_ver}/exchanges/{exchange}/{instrument_c}/{instrument}/aggregations/vwap"
      },
      "parameters": [
        {
          "name": "data_ver",
          "operationParameter": {
            "in": "path",
            "name": "data_ver"
          },
          "required": false
        },
        {
          "name": "start_time",
          "operationParameter": {
            "in": "query",
            "name": "start_time"
          },
          "required": false
        },
        {
          "name": "page_size",
          "operationParameter": {
            "in": "query",
            "name": "page_size"
          },
          "required": false
        },
        {
          "name": "continuation_token",
          "operationParameter": {
            "in": "query",
            "name": "continuation_token"
          },
          "required": false
        },
        {
          "name": "comm",
          "operationParameter": {
            "in": "path",
            "name": "comm"
          },
          "required": false
        },
        {
          "name": "exchange",
          "operationParameter": {
            "in": "path",
            "name": "exchange"
          },
          "required": false
        },
        {
          "name": "instrument",
          "operationParameter": {
            "in": "path",
            "name": "instrument"
          },
          "required": false
        },
        {
          "name": "instrument_c",
          "operationParameter": {
            "in": "path",
            "name": "instrument_c"
          },
          "required": false
        },
        {
          "name": "end_time",
          "operationParameter": {
            "in": "query",
            "name": "end_time"
          },
          "required": false
        },
        {
          "name": "interval",
          "operationParameter": {
            "in": "query",
            "name": "interval"
          },
          "required": false
        },
        {
          "name": "sort",
          "operationParameter": {
            "in": "query",
            "name": "sort"
          },
          "required": false
        }
      ],
      "reservedParameters": [
        {
          "name": "_type"
        },
        {
          "name": "_path"
        },
        {
          "name": "_times"
        }
      ],
      "preProcessingSpecifications": [],
      "postProcessingSpecifications": []
    },
    {
      "fixedOperationParameters": [],
      "name": "GET_/{comm}.{data_ver}/exchanges/{exchange}/{instrument_c}/{instrument}/aggregations/count_ohlcv_vwap",
      "operation": {
        "method": "get",
        "path": "/{comm}.{data_ver}/exchanges/{exchange}/{instrument_c}/{instrument}/aggregations/count_ohlcv_vwap"
      },
      "parameters": [
        {
          "name": "page_size",
          "operationParameter": {
            "in": "query",
            "name": "page_size"
          },
          "required": false
        },
        {
          "name": "sort",
          "operationParameter": {
            "in": "query",
            "name": "sort"
          },
          "required": false
        },
        {
          "name": "data_ver",
          "operationParameter": {
            "in": "path",
            "name": "data_ver"
          },
          "required": false
        },
        {
          "name": "comm",
          "operationParameter": {
            "in": "path",
            "name": "comm"
          },
          "required": false
        },
        {
          "name": "start_time",
          "operationParameter": {
            "in": "query",
            "name": "start_time"
          },
          "required": false
        },
        {
          "name": "exchange",
          "operationParameter": {
            "in": "path",
            "name": "exchange"
          },
          "required": false
        },
        {
          "name": "instrument_c",
          "operationParameter": {
            "in": "path",
            "name": "instrument_c"
          },
          "required": false
        },
        {
          "name": "instrument",
          "operationParameter": {
            "in": "path",
            "name": "instrument"
          },
          "required": false
        },
        {
          "name": "continuation_token",
          "operationParameter": {
            "in": "query",
            "name": "continuation_token"
          },
          "required": false
        },
        {
          "name": "end_time",
          "operationParameter": {
            "in": "query",
            "name": "end_time"
          },
          "required": false
        },
        {
          "name": "interval",
          "operationParameter": {
            "in": "query",
            "name": "interval"
          },
          "required": false
        }
      ],
      "reservedParameters": [
        {
          "name": "_path"
        },
        {
          "name": "_type"
        },
        {
          "name": "_times"
        }
      ],
      "preProcessingSpecifications": [],
      "postProcessingSpecifications": []
    },
    {
      "fixedOperationParameters": [],
      "name": "GET_/trades.{data_ver}/spot_direct_exchange_rate/{base_asset}/{quote_asset}",
      "operation": {
        "method": "get",
        "path": "/trades.{data_ver}/spot_direct_exchange_rate/{base_asset}/{quote_asset}"
      },
      "parameters": [
        {
          "name": "end_time",
          "operationParameter": {
            "in": "query",
            "name": "end_time"
          },
          "required": false
        },
        {
          "name": "data_ver",
          "operationParameter": {
            "in": "path",
            "name": "data_ver"
          },
          "required": false
        },
        {
          "name": "page_size",
          "operationParameter": {
            "in": "query",
            "name": "page_size"
          },
          "required": false
        },
        {
          "name": "include_exchanges",
          "operationParameter": {
            "in": "query",
            "name": "include_exchanges"
          },
          "required": false
        },
        {
          "name": "interval",
          "operationParameter": {
            "in": "query",
            "name": "interval"
          },
          "required": false
        },
        {
          "name": "exclude_exchanges",
          "operationParameter": {
            "in": "query",
            "name": "exclude_exchanges"
          },
          "required": false
        },
        {
          "name": "base_asset",
          "operationParameter": {
            "in": "path",
            "name": "base_asset"
          },
          "required": false
        },
        {
          "name": "quote_asset",
          "operationParameter": {
            "in": "path",
            "name": "quote_asset"
          },
          "required": false
        },
        {
          "name": "sources",
          "operationParameter": {
            "in": "query",
            "name": "sources"
          },
          "required": false
        },
        {
          "name": "sort",
          "operationParameter": {
            "in": "query",
            "name": "sort"
          },
          "required": false
        },
        {
          "name": "start_time",
          "operationParameter": {
            "in": "query",
            "name": "start_time"
          },
          "required": false
        }
      ],
      "reservedParameters": [
        {
          "name": "_type"
        },
        {
          "name": "_times"
        },
        {
          "name": "_path"
        }
      ],
      "preProcessingSpecifications": [],
      "postProcessingSpecifications": [
        {
          "environment": "Node",
          "value": "let validOutputs = []; if(input.data.length < 0) { throw Error('No data!'); } else { validOutputs = input.data.filter((obj => obj.price !== null ))}; output = {price: validOutputs[0].price}",
          "timeoutMs": 5000
        }
      ]
    },
    {
      "fixedOperationParameters": [],
      "name": "GET_/trades.{data_ver}/spot_exchange_rate/{base_asset}/{quote_asset}",
      "operation": {
        "method": "get",
        "path": "/trades.{data_ver}/spot_exchange_rate/{base_asset}/{quote_asset}"
      },
      "parameters": [
        {
          "name": "quote_asset",
          "operationParameter": {
            "in": "path",
            "name": "quote_asset"
          },
          "required": false
        },
        {
          "name": "outliers_min_data",
          "operationParameter": {
            "in": "query",
            "name": "outliers_min_data"
          },
          "required": false
        },
        {
          "name": "start_time",
          "operationParameter": {
            "in": "query",
            "name": "start_time"
          },
          "required": false
        },
        {
          "name": "sort",
          "operationParameter": {
            "in": "query",
            "name": "sort"
          },
          "required": false
        },
        {
          "name": "end_time",
          "operationParameter": {
            "in": "query",
            "name": "end_time"
          },
          "required": false
        },
        {
          "name": "outliers_threshold",
          "operationParameter": {
            "in": "query",
            "name": "outliers_threshold"
          },
          "required": false
        },
        {
          "name": "base_asset",
          "operationParameter": {
            "in": "path",
            "name": "base_asset"
          },
          "required": false
        },
        {
          "name": "data_ver",
          "operationParameter": {
            "in": "path",
            "name": "data_ver"
          },
          "required": false
        },
        {
          "name": "include_exchanges",
          "operationParameter": {
            "in": "query",
            "name": "include_exchanges"
          },
          "required": false
        },
        {
          "name": "page_size",
          "operationParameter": {
            "in": "query",
            "name": "page_size"
          },
          "required": false
        },
        {
          "name": "sources",
          "operationParameter": {
            "in": "query",
            "name": "sources"
          },
          "required": false
        },
        {
          "name": "outliers_strategy",
          "operationParameter": {
            "in": "query",
            "name": "outliers_strategy"
          },
          "required": false
        },
        {
          "name": "interval",
          "operationParameter": {
            "in": "query",
            "name": "interval"
          },
          "required": false
        },
        {
          "name": "extrapolate_missing_values",
          "operationParameter": {
            "in": "query",
            "name": "extrapolate_missing_values"
          },
          "required": false
        },
        {
          "name": "exclude_exchanges",
          "operationParameter": {
            "in": "query",
            "name": "exclude_exchanges"
          },
          "required": false
        }
      ],
      "reservedParameters": [
        {
          "name": "_times"
        },
        {
          "name": "_path"
        },
        {
          "name": "_type"
        }
      ],
      "preProcessingSpecifications": [],
      "postProcessingSpecifications": [
        {
          "environment": "Node",
          "value": "let validOutputs = []; if(input.data.length < 0) { throw Error('No data!'); } else { validOutputs = input.data.filter((obj => obj.price !== null ))}; output = {price: validOutputs[0].price}",
          "timeoutMs": 5000
        }
      ]
    },
    {
      "fixedOperationParameters": [],
      "name": "GET_/trades.{data_ver}/valuation",
      "operation": {
        "method": "get",
        "path": "/trades.{data_ver}/valuation"
      },
      "parameters": [
        {
          "name": "interval",
          "operationParameter": {
            "in": "query",
            "name": "interval"
          },
          "required": false
        },
        {
          "name": "continuation_token",
          "operationParameter": {
            "in": "query",
            "name": "continuation_token"
          },
          "required": false
        },
        {
          "name": "data_ver",
          "operationParameter": {
            "in": "path",
            "name": "data_ver"
          },
          "required": false
        },
        {
          "name": "bases",
          "operationParameter": {
            "in": "query",
            "name": "bases"
          },
          "required": false
        },
        {
          "name": "semi_length_window",
          "operationParameter": {
            "in": "query",
            "name": "semi_length_window"
          },
          "required": false
        },
        {
          "name": "sources",
          "operationParameter": {
            "in": "query",
            "name": "sources"
          },
          "required": false
        },
        {
          "name": "quote",
          "operationParameter": {
            "in": "query",
            "name": "quote"
          },
          "required": false
        },
        {
          "name": "weights",
          "operationParameter": {
            "in": "query",
            "name": "weights"
          },
          "required": false
        },
        {
          "name": "exchanges",
          "operationParameter": {
            "in": "query",
            "name": "exchanges"
          },
          "required": false
        },
        {
          "name": "end_time",
          "operationParameter": {
            "in": "query",
            "name": "end_time"
          },
          "required": false
        },
        {
          "name": "percentages",
          "operationParameter": {
            "in": "query",
            "name": "percentages"
          },
          "required": false
        },
        {
          "name": "start_time",
          "operationParameter": {
            "in": "query",
            "name": "start_time"
          },
          "required": false
        }
      ],
      "reservedParameters": [
        {
          "name": "_times"
        },
        {
          "name": "_type"
        },
        {
          "name": "_path"
        }
      ],
      "preProcessingSpecifications": [],
      "postProcessingSpecifications": []
    },
    {
      "fixedOperationParameters": [],
      "name": "GET_/analytics.{data_ver}/oanda_fx_rates",
      "operation": {
        "method": "get",
        "path": "/analytics.{data_ver}/oanda_fx_rates"
      },
      "parameters": [
        {
          "name": "data_ver",
          "operationParameter": {
            "in": "path",
            "name": "data_ver"
          },
          "required": false
        },
        {
          "name": "sort",
          "operationParameter": {
            "in": "query",
            "name": "sort"
          },
          "required": false
        },
        {
          "name": "start_time",
          "operationParameter": {
            "in": "query",
            "name": "start_time"
          },
          "required": false
        },
        {
          "name": "quote",
          "operationParameter": {
            "in": "query",
            "name": "quote"
          },
          "required": false
        },
        {
          "name": "base",
          "operationParameter": {
            "in": "query",
            "name": "base"
          },
          "required": false
        },
        {
          "name": "page_size",
          "operationParameter": {
            "in": "query",
            "name": "page_size"
          },
          "required": false
        },
        {
          "name": "continuation_token",
          "operationParameter": {
            "in": "query",
            "name": "continuation_token"
          },
          "required": false
        },
        {
          "name": "interval",
          "operationParameter": {
            "in": "query",
            "name": "interval"
          },
          "required": false
        },
        {
          "name": "end_time",
          "operationParameter": {
            "in": "query",
            "name": "end_time"
          },
          "required": false
        }
      ],
      "reservedParameters": [
        {
          "name": "_type"
        },
        {
          "name": "_times"
        },
        {
          "name": "_path"
        }
      ],
      "preProcessingSpecifications": [],
      "postProcessingSpecifications": []
    },
    {
      "fixedOperationParameters": [],
      "name": "GET_/data/liquidity.{data_ver}/events",
      "operation": {
        "method": "get",
        "path": "/data/liquidity.{data_ver}/events"
      },
      "parameters": [
        {
          "name": "start_block",
          "operationParameter": {
            "in": "query",
            "name": "start_block"
          },
          "required": false
        },
        {
          "name": "start_time",
          "operationParameter": {
            "in": "query",
            "name": "start_time"
          },
          "required": false
        },
        {
          "name": "data_ver",
          "operationParameter": {
            "in": "path",
            "name": "data_ver"
          },
          "required": false
        },
        {
          "name": "block_number",
          "operationParameter": {
            "in": "query",
            "name": "block_number"
          },
          "required": false
        },
        {
          "name": "end_time",
          "operationParameter": {
            "in": "query",
            "name": "end_time"
          },
          "required": false
        },
        {
          "name": "sort",
          "operationParameter": {
            "in": "query",
            "name": "sort"
          },
          "required": false
        },
        {
          "name": "pool_contains",
          "operationParameter": {
            "in": "query",
            "name": "pool_contains"
          },
          "required": false
        },
        {
          "name": "protocol",
          "operationParameter": {
            "in": "query",
            "name": "protocol"
          },
          "required": false
        },
        {
          "name": "pool_address",
          "operationParameter": {
            "in": "query",
            "name": "pool_address"
          },
          "required": false
        },
        {
          "name": "user_addresses",
          "operationParameter": {
            "in": "query",
            "name": "user_addresses"
          },
          "required": false
        },
        {
          "name": "page_size",
          "operationParameter": {
            "in": "query",
            "name": "page_size"
          },
          "required": false
        },
        {
          "name": "type",
          "operationParameter": {
            "in": "query",
            "name": "type"
          },
          "required": false
        },
        {
          "name": "tx_hash",
          "operationParameter": {
            "in": "query",
            "name": "tx_hash"
          },
          "required": false
        },
        {
          "name": "end_block",
          "operationParameter": {
            "in": "query",
            "name": "end_block"
          },
          "required": false
        }
      ],
      "reservedParameters": [
        {
          "name": "_times"
        },
        {
          "name": "_path"
        },
        {
          "name": "_type"
        }
      ],
      "preProcessingSpecifications": [],
      "postProcessingSpecifications": []
    },
    {
      "fixedOperationParameters": [],
      "name": "GET_/data/liquidity.{data_ver}/snapshots",
      "operation": {
        "method": "get",
        "path": "/data/liquidity.{data_ver}/snapshots"
      },
      "parameters": [
        {
          "name": "sort",
          "operationParameter": {
            "in": "query",
            "name": "sort"
          },
          "required": false
        },
        {
          "name": "start_time",
          "operationParameter": {
            "in": "query",
            "name": "start_time"
          },
          "required": false
        },
        {
          "name": "start_block",
          "operationParameter": {
            "in": "query",
            "name": "start_block"
          },
          "required": false
        },
        {
          "name": "end_block",
          "operationParameter": {
            "in": "query",
            "name": "end_block"
          },
          "required": false
        },
        {
          "name": "pool_address",
          "operationParameter": {
            "in": "query",
            "name": "pool_address"
          },
          "required": false
        },
        {
          "name": "data_ver",
          "operationParameter": {
            "in": "path",
            "name": "data_ver"
          },
          "required": false
        },
        {
          "name": "page_size",
          "operationParameter": {
            "in": "query",
            "name": "page_size"
          },
          "required": false
        },
        {
          "name": "end_time",
          "operationParameter": {
            "in": "query",
            "name": "end_time"
          },
          "required": false
        }
      ],
      "reservedParameters": [
        {
          "name": "_type"
        },
        {
          "name": "_times"
        },
        {
          "name": "_path"
        }
      ],
      "preProcessingSpecifications": [],
      "postProcessingSpecifications": []
    },
    {
      "fixedOperationParameters": [],
      "name": "GET_/data/liquidity.{data_ver}/snapshots/usp3",
      "operation": {
        "method": "get",
        "path": "/data/liquidity.{data_ver}/snapshots/usp3"
      },
      "parameters": [
        {
          "name": "start_block",
          "operationParameter": {
            "in": "query",
            "name": "start_block"
          },
          "required": false
        },
        {
          "name": "start_time",
          "operationParameter": {
            "in": "query",
            "name": "start_time"
          },
          "required": false
        },
        {
          "name": "data_ver",
          "operationParameter": {
            "in": "path",
            "name": "data_ver"
          },
          "required": false
        },
        {
          "name": "page_size",
          "operationParameter": {
            "in": "query",
            "name": "page_size"
          },
          "required": false
        },
        {
          "name": "end_block",
          "operationParameter": {
            "in": "query",
            "name": "end_block"
          },
          "required": false
        },
        {
          "name": "pool_address",
          "operationParameter": {
            "in": "query",
            "name": "pool_address"
          },
          "required": false
        },
        {
          "name": "end_time",
          "operationParameter": {
            "in": "query",
            "name": "end_time"
          },
          "required": false
        },
        {
          "name": "price_range",
          "operationParameter": {
            "in": "query",
            "name": "price_range"
          },
          "required": false
        }
      ],
      "reservedParameters": [
        {
          "name": "_type"
        },
        {
          "name": "_times"
        },
        {
          "name": "_path"
        }
      ],
      "preProcessingSpecifications": [],
      "postProcessingSpecifications": []
    },
    {
      "fixedOperationParameters": [],
      "name": "GET_/lending.{data_ver}/events",
      "operation": {
        "method": "get",
        "path": "/lending.{data_ver}/events"
      },
      "parameters": [
        {
          "name": "user_address",
          "operationParameter": {
            "in": "query",
            "name": "user_address"
          },
          "required": false
        },
        {
          "name": "start_time",
          "operationParameter": {
            "in": "query",
            "name": "start_time"
          },
          "required": false
        },
        {
          "name": "page_size",
          "operationParameter": {
            "in": "query",
            "name": "page_size"
          },
          "required": false
        },
        {
          "name": "end_block",
          "operationParameter": {
            "in": "query",
            "name": "end_block"
          },
          "required": false
        },
        {
          "name": "start_block",
          "operationParameter": {
            "in": "query",
            "name": "start_block"
          },
          "required": false
        },
        {
          "name": "block_number",
          "operationParameter": {
            "in": "query",
            "name": "block_number"
          },
          "required": false
        },
        {
          "name": "asset",
          "operationParameter": {
            "in": "query",
            "name": "asset"
          },
          "required": false
        },
        {
          "name": "tx_hash",
          "operationParameter": {
            "in": "query",
            "name": "tx_hash"
          },
          "required": false
        },
        {
          "name": "protocol",
          "operationParameter": {
            "in": "query",
            "name": "protocol"
          },
          "required": false
        },
        {
          "name": "blockchain",
          "operationParameter": {
            "in": "query",
            "name": "blockchain"
          },
          "required": false
        },
        {
          "name": "sort",
          "operationParameter": {
            "in": "query",
            "name": "sort"
          },
          "required": false
        },
        {
          "name": "type",
          "operationParameter": {
            "in": "query",
            "name": "type"
          },
          "required": false
        },
        {
          "name": "data_ver",
          "operationParameter": {
            "in": "path",
            "name": "data_ver"
          },
          "required": false
        },
        {
          "name": "end_time",
          "operationParameter": {
            "in": "query",
            "name": "end_time"
          },
          "required": false
        }
      ],
      "reservedParameters": [
        {
          "name": "_path"
        },
        {
          "name": "_type"
        },
        {
          "name": "_times"
        }
      ],
      "preProcessingSpecifications": [],
      "postProcessingSpecifications": []
    },
    {
      "fixedOperationParameters": [],
      "name": "GET_/analytics.{data_ver}/value_at_risk",
      "operation": {
        "method": "get",
        "path": "/analytics.{data_ver}/value_at_risk"
      },
      "parameters": [
        {
          "name": "quote",
          "operationParameter": {
            "in": "query",
            "name": "quote"
          },
          "required": false
        },
        {
          "name": "end_time",
          "operationParameter": {
            "in": "query",
            "name": "end_time"
          },
          "required": false
        },
        {
          "name": "exchanges",
          "operationParameter": {
            "in": "query",
            "name": "exchanges"
          },
          "required": false
        },
        {
          "name": "bases",
          "operationParameter": {
            "in": "query",
            "name": "bases"
          },
          "required": false
        },
        {
          "name": "sources",
          "operationParameter": {
            "in": "query",
            "name": "sources"
          },
          "required": false
        },
        {
          "name": "quantities",
          "operationParameter": {
            "in": "query",
            "name": "quantities"
          },
          "required": false
        },
        {
          "name": "risk_level",
          "operationParameter": {
            "in": "query",
            "name": "risk_level"
          },
          "required": false
        },
        {
          "name": "start_time",
          "operationParameter": {
            "in": "query",
            "name": "start_time"
          },
          "required": false
        },
        {
          "name": "data_ver",
          "operationParameter": {
            "in": "path",
            "name": "data_ver"
          },
          "required": false
        }
      ],
      "reservedParameters": [
        {
          "name": "_type"
        },
        {
          "name": "_times"
        },
        {
          "name": "_path"
        }
      ],
      "preProcessingSpecifications": [],
      "postProcessingSpecifications": []
    },
    {
      "fixedOperationParameters": [],
      "name": "GET_/derivatives.{data_ver}/reference",
      "operation": {
        "method": "get",
        "path": "/derivatives.{data_ver}/reference"
      },
      "parameters": [
        {
          "name": "base_assets",
          "operationParameter": {
            "in": "query",
            "name": "base_assets"
          },
          "required": false
        },
        {
          "name": "page_size",
          "operationParameter": {
            "in": "query",
            "name": "page_size"
          },
          "required": false
        },
        {
          "name": "start_time",
          "operationParameter": {
            "in": "query",
            "name": "start_time"
          },
          "required": false
        },
        {
          "name": "quote_assets",
          "operationParameter": {
            "in": "query",
            "name": "quote_assets"
          },
          "required": false
        },
        {
          "name": "option_type",
          "operationParameter": {
            "in": "query",
            "name": "option_type"
          },
          "required": false
        },
        {
          "name": "instrument_class",
          "operationParameter": {
            "in": "query",
            "name": "instrument_class"
          },
          "required": false
        },
        {
          "name": "data_ver",
          "operationParameter": {
            "in": "path",
            "name": "data_ver"
          },
          "required": false
        },
        {
          "name": "end_time",
          "operationParameter": {
            "in": "query",
            "name": "end_time"
          },
          "required": false
        },
        {
          "name": "exchange",
          "operationParameter": {
            "in": "query",
            "name": "exchange"
          },
          "required": false
        },
        {
          "name": "instrument",
          "operationParameter": {
            "in": "query",
            "name": "instrument"
          },
          "required": false
        }
      ],
      "reservedParameters": [
        {
          "name": "_times"
        },
        {
          "name": "_type"
        },
        {
          "name": "_path"
        }
      ],
      "preProcessingSpecifications": [],
      "postProcessingSpecifications": []
    },
    {
      "fixedOperationParameters": [],
      "name": "GET_/derivatives.{data_ver}/risk",
      "operation": {
        "method": "get",
        "path": "/derivatives.{data_ver}/risk"
      },
      "parameters": [
        {
          "name": "interval",
          "operationParameter": {
            "in": "query",
            "name": "interval"
          },
          "required": false
        },
        {
          "name": "sort",
          "operationParameter": {
            "in": "query",
            "name": "sort"
          },
          "required": false
        },
        {
          "name": "end_time",
          "operationParameter": {
            "in": "query",
            "name": "end_time"
          },
          "required": false
        },
        {
          "name": "start_time",
          "operationParameter": {
            "in": "query",
            "name": "start_time"
          },
          "required": false
        },
        {
          "name": "page_size",
          "operationParameter": {
            "in": "query",
            "name": "page_size"
          },
          "required": false
        },
        {
          "name": "data_ver",
          "operationParameter": {
            "in": "path",
            "name": "data_ver"
          },
          "required": false
        },
        {
          "name": "exchange",
          "operationParameter": {
            "in": "query",
            "name": "exchange"
          },
          "required": false
        },
        {
          "name": "instrument_class",
          "operationParameter": {
            "in": "query",
            "name": "instrument_class"
          },
          "required": false
        },
        {
          "name": "instrument",
          "operationParameter": {
            "in": "query",
            "name": "instrument"
          },
          "required": false
        }
      ],
      "reservedParameters": [
        {
          "name": "_times"
        },
        {
          "name": "_path"
        },
        {
          "name": "_type"
        }
      ],
      "preProcessingSpecifications": [],
      "postProcessingSpecifications": []
    },
    {
      "fixedOperationParameters": [],
      "name": "GET_/derivatives.{data_ver}/price",
      "operation": {
        "method": "get",
        "path": "/derivatives.{data_ver}/price"
      },
      "parameters": [
        {
          "name": "instrument",
          "operationParameter": {
            "in": "query",
            "name": "instrument"
          },
          "required": false
        },
        {
          "name": "page_size",
          "operationParameter": {
            "in": "query",
            "name": "page_size"
          },
          "required": false
        },
        {
          "name": "instrument_class",
          "operationParameter": {
            "in": "query",
            "name": "instrument_class"
          },
          "required": false
        },
        {
          "name": "interval",
          "operationParameter": {
            "in": "query",
            "name": "interval"
          },
          "required": false
        },
        {
          "name": "sort",
          "operationParameter": {
            "in": "query",
            "name": "sort"
          },
          "required": false
        },
        {
          "name": "start_time",
          "operationParameter": {
            "in": "query",
            "name": "start_time"
          },
          "required": false
        },
        {
          "name": "end_time",
          "operationParameter": {
            "in": "query",
            "name": "end_time"
          },
          "required": false
        },
        {
          "name": "data_ver",
          "operationParameter": {
            "in": "path",
            "name": "data_ver"
          },
          "required": false
        },
        {
          "name": "exchange",
          "operationParameter": {
            "in": "query",
            "name": "exchange"
          },
          "required": false
        }
      ],
      "reservedParameters": [
        {
          "name": "_path"
        },
        {
          "name": "_times"
        },
        {
          "name": "_type"
        }
      ],
      "preProcessingSpecifications": [],
      "postProcessingSpecifications": []
    },
    {
      "fixedOperationParameters": [],
      "name": "GET_/analytics.{data_ver}/implied_volatility_smile",
      "operation": {
        "method": "get",
        "path": "/analytics.{data_ver}/implied_volatility_smile"
      },
      "parameters": [
        {
          "name": "base",
          "operationParameter": {
            "in": "query",
            "name": "base"
          },
          "required": false
        },
        {
          "name": "expiry",
          "operationParameter": {
            "in": "query",
            "name": "expiry"
          },
          "required": false
        },
        {
          "name": "data_ver",
          "operationParameter": {
            "in": "path",
            "name": "data_ver"
          },
          "required": false
        },
        {
          "name": "strikes",
          "operationParameter": {
            "in": "query",
            "name": "strikes"
          },
          "required": false
        },
        {
          "name": "time",
          "operationParameter": {
            "in": "query",
            "name": "time"
          },
          "required": false
        },
        {
          "name": "exchange",
          "operationParameter": {
            "in": "query",
            "name": "exchange"
          },
          "required": false
        },
        {
          "name": "quote",
          "operationParameter": {
            "in": "query",
            "name": "quote"
          },
          "required": false
        },
        {
          "name": "forward_log_moneynesses",
          "operationParameter": {
            "in": "query",
            "name": "forward_log_moneynesses"
          },
          "required": false
        }
      ],
      "reservedParameters": [
        {
          "name": "_type"
        },
        {
          "name": "_path"
        },
        {
          "name": "_times"
        }
      ],
      "preProcessingSpecifications": [],
      "postProcessingSpecifications": []
    },
    {
      "fixedOperationParameters": [],
      "name": "feed",
      "operation": {
        "method": "get",
        "path": "/{path}"
      },
      "parameters": [
        {
          "name": "name",
          "required": true
        },
        {
          "name": "path",
          "operationParameter": {
            "in": "path",
            "name": "path"
          },
          "required": true
        },
        {
          "name": "outliers_min_data",
          "operationParameter": {
            "in": "query",
            "name": "outliers_min_data"
          },
          "required": false
        },
        {
          "name": "start_time",
          "operationParameter": {
            "in": "query",
            "name": "start_time"
          },
          "required": false
        },
        {
          "name": "sort",
          "operationParameter": {
            "in": "query",
            "name": "sort"
          },
          "required": false
        },
        {
          "name": "end_time",
          "operationParameter": {
            "in": "query",
            "name": "end_time"
          },
          "required": false
        },
        {
          "name": "outliers_threshold",
          "operationParameter": {
            "in": "query",
            "name": "outliers_threshold"
          },
          "required": false
        },
        {
          "name": "include_exchanges",
          "operationParameter": {
            "in": "query",
            "name": "include_exchanges"
          },
          "required": false
        },
        {
          "name": "page_size",
          "operationParameter": {
            "in": "query",
            "name": "page_size"
          },
          "required": false
        },
        {
          "name": "sources",
          "operationParameter": {
            "in": "query",
            "name": "sources"
          },
          "required": false
        },
        {
          "name": "outliers_strategy",
          "operationParameter": {
            "in": "query",
            "name": "outliers_strategy"
          },
          "required": false
        },
        {
          "name": "interval",
          "operationParameter": {
            "in": "query",
            "name": "interval"
          },
          "required": false
        },
        {
          "name": "extrapolate_missing_values",
          "operationParameter": {
            "in": "query",
            "name": "extrapolate_missing_values"
          },
          "required": false
        },
        {
          "name": "exclude_exchanges",
          "operationParameter": {
            "in": "query",
            "name": "exclude_exchanges"
          },
          "required": false
        }
      ],
      "reservedParameters": [
        {
          "name": "_type",
          "fixed": "int256"
        },
        {
          "name": "_times",
          "fixed": "1000000000000000000"
        }
      ],
      "preProcessingSpecifications": [
        {
          "environment": "Node",
          "value": "const preProcessingObject = {\n  \"AAVE/USD\": {\n    path: \"trades.v2/spot_exchange_rate/aave/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"ADA/USD\": {\n    path: \"trades.v2/spot_exchange_rate/ada/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"ALGO/USD\": {\n    path: \"trades.v2/spot_exchange_rate/algo/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"ANKR/USD\": {\n    path: \"trades.v2/spot_exchange_rate/ankr/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"APE/USD\": {\n    path: \"trades.v2/spot_exchange_rate/ape/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"API3/USD\": {\n    path: \"trades.v2/spot_exchange_rate/api3/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"APT/USD\": {\n    path: \"trades.v2/spot_exchange_rate/apt/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"ARB/USD\": {\n    path: \"trades.v2/spot_exchange_rate/arb/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"ATOM/USD\": {\n    path: \"trades.v2/spot_exchange_rate/atom/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"AVAX/USD\": {\n    path: \"trades.v2/spot_exchange_rate/avax/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"AXS/USD\": {\n    path: \"trades.v2/spot_exchange_rate/axs/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"BAL/USD\": {\n    path: \"trades.v2/spot_exchange_rate/bal/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"BAND/USD\": {\n    path: \"trades.v2/spot_exchange_rate/band/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"BAT/USD\": {\n    path: \"trades.v2/spot_exchange_rate/bat/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"BLUR/USD\": {\n    path: \"trades.v2/spot_exchange_rate/blur/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"BNB/USD\": {\n    path: \"trades.v2/spot_exchange_rate/bnb/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"BTC/USD\": {\n    path: \"trades.v2/spot_exchange_rate/btc/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"BTT/USD\": {\n    path: \"trades.v2/spot_exchange_rate/btt/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"BUSD/USD\": {\n    path: \"trades.v2/spot_exchange_rate/busd/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"CAKE/USD\": {\n    path: \"trades.v2/spot_exchange_rate/cake/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"CELO/USD\": {\n    path: \"trades.v2/spot_exchange_rate/celo/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"CHZ/USD\": {\n    path: \"trades.v2/spot_exchange_rate/chz/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"COMP/USD\": {\n    path: \"trades.v2/spot_exchange_rate/comp/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"CRO/USD\": {\n    path: \"trades.v2/spot_exchange_rate/cro/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"CRV/USD\": {\n    path: \"trades.v2/spot_exchange_rate/crv/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"CVX/USD\": {\n    path: \"trades.v2/spot_exchange_rate/cvx/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"DAI/USD\": {\n    path: \"trades.v2/spot_exchange_rate/dai/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"DOGE/USD\": {\n    path: \"trades.v2/spot_exchange_rate/doge/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"DOT/USD\": {\n    path: \"trades.v2/spot_exchange_rate/dot/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"DYDX/USD\": {\n    path: \"trades.v2/spot_exchange_rate/dydx/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"ENS/USD\": {\n    path: \"trades.v2/spot_exchange_rate/ens/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"ETH/USD\": {\n    path: \"trades.v2/spot_exchange_rate/eth/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"EUL/USD\": {\n    path: \"trades.v2/spot_exchange_rate/eul/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"FIL/USD\": {\n    path: \"trades.v2/spot_exchange_rate/fil/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"FLOW/USD\": {\n    path: \"trades.v2/spot_exchange_rate/flow/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"FTM/USD\": {\n    path: \"trades.v2/spot_exchange_rate/ftm/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"FXS/USD\": {\n    path: \"trades.v2/spot_exchange_rate/fxs/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"GLMR/USD\": {\n    path: \"trades.v2/spot_exchange_rate/glmr/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"GMX/USD\": {\n    path: \"trades.v2/spot_exchange_rate/gmx/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"GNO/USD\": {\n    path: \"trades.v2/spot_exchange_rate/gno/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"GNS/USD\": {\n    path: \"trades.v2/spot_exchange_rate/gns/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"GRT/USD\": {\n    path: \"trades.v2/spot_exchange_rate/grt/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"HBAR/USD\": {\n    path: \"trades.v2/spot_exchange_rate/hbar/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"HNT/USD\": {\n    path: \"trades.v2/spot_exchange_rate/hnt/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"HT/USD\": {\n    path: \"trades.v2/spot_exchange_rate/ht/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"ICP/USD\": {\n    path: \"trades.v2/spot_exchange_rate/icp/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"IMX/USD\": {\n    path: \"trades.v2/spot_exchange_rate/imx/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"JOE/USD\": {\n    path: \"trades.v2/spot_exchange_rate/joe/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"KAVA/USD\": {\n    path: \"trades.v2/spot_exchange_rate/kava/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"KDA/USD\": {\n    path: \"trades.v2/spot_exchange_rate/kda/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"KSM/USD\": {\n    path: \"trades.v2/spot_exchange_rate/ksm/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"LDO/USD\": {\n    path: \"trades.v2/spot_exchange_rate/ldo/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"LINK/USD\": {\n    path: \"trades.v2/spot_exchange_rate/link/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"LQTY/USD\": {\n    path: \"trades.v2/spot_exchange_rate/lqty/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"LTC/USD\": {\n    path: \"trades.v2/spot_exchange_rate/ltc/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"MANA/USD\": {\n    path: \"trades.v2/spot_exchange_rate/mana/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"MASK/USD\": {\n    path: \"trades.v2/spot_exchange_rate/mask/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"MATIC/USD\": {\n    path: \"trades.v2/spot_exchange_rate/matic/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"METIS/USD\": {\n    path: \"trades.v2/spot_exchange_rate/metis/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"MKR/USD\": {\n    path: \"trades.v2/spot_exchange_rate/mkr/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"MNT/USD\": {\n    path: \"trades.v2/spot_exchange_rate/mnt/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"MOVR/USD\": {\n    path: \"trades.v2/spot_exchange_rate/movr/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"NEAR/USD\": {\n    path: \"trades.v2/spot_exchange_rate/near/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"OKB/USD\": {\n    path: \"trades.v2/spot_exchange_rate/okb/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"OP/USD\": {\n    path: \"trades.v2/spot_exchange_rate/op/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"OSMO/USD\": {\n    path: \"trades.v2/spot_exchange_rate/osmo/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"PAXG/USD\": {\n    path: \"trades.v2/spot_exchange_rate/paxg/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"PEPE/USD\": {\n    path: \"trades.v2/spot_exchange_rate/pepe/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"QUICK/USD\": {\n    path: \"trades.v2/spot_exchange_rate/quick/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"RBN/USD\": {\n    path: \"trades.v2/spot_exchange_rate/rbn/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"RNDR/USD\": {\n    path: \"trades.v2/spot_exchange_rate/rndr/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"ROSE/USD\": {\n    path: \"trades.v2/spot_exchange_rate/rose/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"RPL/USD\": {\n    path: \"trades.v2/spot_exchange_rate/rpl/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"RSR/USD\": {\n    path: \"trades.v2/spot_exchange_rate/rsr/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"RUNE/USD\": {\n    path: \"trades.v2/spot_exchange_rate/rune/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"SAND/USD\": {\n    path: \"trades.v2/spot_exchange_rate/sand/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"SHIB/USD\": {\n    path: \"trades.v2/spot_exchange_rate/shib/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"SNX/USD\": {\n    path: \"trades.v2/spot_exchange_rate/snx/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"SOL/USD\": {\n    path: \"trades.v2/spot_exchange_rate/sol/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"STETH/USD\": {\n    path: \"trades.v2/spot_exchange_rate/steth/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"STG/USD\": {\n    path: \"trades.v2/spot_exchange_rate/stg/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"STX/USD\": {\n    path: \"trades.v2/spot_exchange_rate/stx/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"SUI/USD\": {\n    path: \"trades.v2/spot_exchange_rate/sui/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"SUSHI/USD\": {\n    path: \"trades.v2/spot_exchange_rate/sushi/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"TUSD/USD\": {\n    path: \"trades.v2/spot_exchange_rate/tusd/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"UMA/USD\": {\n    path: \"trades.v2/spot_exchange_rate/uma/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"UNI/USD\": {\n    path: \"trades.v2/spot_exchange_rate/uni/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"USDC/USD\": {\n    path: \"trades.v2/spot_exchange_rate/usdc/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"USDP/USD\": {\n    path: \"trades.v2/spot_exchange_rate/usdp/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"USDT/USD\": {\n    path: \"trades.v2/spot_exchange_rate/usdt/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"WBTC/USD\": {\n    path: \"trades.v2/spot_exchange_rate/wbtc/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"XLM/USD\": {\n    path: \"trades.v2/spot_exchange_rate/xlm/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"XMR/USD\": {\n    path: \"trades.v2/spot_exchange_rate/xmr/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"XRP/USD\": {\n    path: \"trades.v2/spot_exchange_rate/xrp/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"XTZ/USD\": {\n    path: \"trades.v2/spot_exchange_rate/xtz/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"YFI/USD\": {\n    path: \"trades.v2/spot_exchange_rate/yfi/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"ZIL/USD\": {\n    path: \"trades.v2/spot_exchange_rate/zil/usd\",\n    parameters: { interval: \"1m\" },\n  },\n  \"ZRX/USD\": {\n    path: \"trades.v2/spot_exchange_rate/zrx/usd\",\n    parameters: { interval: \"1m\" },\n  },\n}\noutput = {\n  path: preProcessingObject[endpointParameters.name].path,\n  ...preProcessingObject[endpointParameters.name].parameters,\n}\n",
          "timeoutMs": 5000
        }
      ],
      "postProcessingSpecifications": [
        {
          "environment": "Node",
          "value": "const postProcessingObject = {\n  \"AAVE/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"ADA/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"ALGO/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"ANKR/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"APE/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"API3/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"APT/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"ARB/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"ATOM/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"AVAX/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"AXS/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"BAL/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"BAND/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"BAT/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"BLUR/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"BNB/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"BTC/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"BTT/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"BUSD/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"CAKE/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"CELO/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"CHZ/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"COMP/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"CRO/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"CRV/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"CVX/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"DAI/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"DOGE/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"DOT/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"DYDX/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"ENS/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"ETH/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"EUL/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"FIL/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"FLOW/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"FTM/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"FXS/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"GLMR/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"GMX/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"GNO/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"GNS/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"GRT/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"HBAR/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"HNT/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"HT/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"ICP/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"IMX/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"JOE/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"KAVA/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"KDA/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"KSM/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"LDO/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"LINK/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"LQTY/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"LTC/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"MANA/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"MASK/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"MATIC/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"METIS/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"MKR/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"MNT/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"MOVR/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"NEAR/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"OKB/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"OP/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"OSMO/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"PAXG/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"PEPE/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"QUICK/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"RBN/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"RNDR/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"ROSE/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"RPL/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"RSR/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"RUNE/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"SAND/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"SHIB/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"SNX/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"SOL/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"STETH/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"STG/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"STX/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"SUI/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"SUSHI/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"TUSD/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"UMA/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"UNI/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"USDC/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"USDP/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"USDT/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"WBTC/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"XLM/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"XMR/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"XRP/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"XTZ/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"YFI/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"ZIL/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n  \"ZRX/USD\":\n    \"(response) => {\\n              if(input.data.length <= 0) { \\n                throw Error('[PostProcessing] - No valid data from Kaiko!');\\n              } else { \\n                const validOutputs = input.data.filter((obj => obj.price !== null )); \\n                return validOutputs[0].price\\n              }\\n            }\\n            \",\n}\nconst parser = eval(postProcessingObject[endpointParameters.name])\noutput = parser(input)\n",
          "timeoutMs": 5000
        }
      ]
    }
  ]
}